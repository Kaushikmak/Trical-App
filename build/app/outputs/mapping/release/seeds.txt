com.google.firebase.storage.ktx.FirebaseStorageKtxRegistrar
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar
io.flutter.view.TextureRegistry$ImageTextureEntry
com.google.firebase.appcheck.FirebaseAppCheckRegistrar
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.core.app.RemoteActionCompat
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
com.google.firebase.iid.Registrar
io.grpc.internal.DnsNameResolverProvider
io.flutter.plugins.GeneratedPluginRegistrant
androidx.profileinstaller.ProfileInstallReceiver
io.flutter.view.TextureRegistry$ImageConsumer
io.flutter.view.TextureRegistry$SurfaceTextureEntry
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
com.google.firebase.messaging.FirebaseMessaging
com.google.firebase.components.ComponentDiscoveryService
androidx.startup.InitializationProvider
io.grpc.internal.JndiResourceResolverFactory
android.support.v4.app.RemoteActionCompatParcelizer
androidx.core.graphics.drawable.IconCompat
com.google.firebase.firestore.core.ActivityScope$StopListenerSupportFragment
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
com.google.firebase.appcheck.FirebaseAppCheckKtxRegistrar
androidx.lifecycle.ProcessLifecycleInitializer
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.google.firebase.FirebaseCommonKtxRegistrar
com.google.android.gms.common.api.GoogleApiActivity
kotlin.internal.jdk8.JDK8PlatformImplementations
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
com.google.firebase.firestore.FirebaseFirestoreKtxRegistrar
androidx.window.extensions.core.util.function.Function
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
kotlin.internal.jdk7.JDK7PlatformImplementations
com.google.android.gms.common.GooglePlayServicesManifestException
com.google.firebase.firestore.ktx.FirebaseFirestoreKtxRegistrar
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar
com.google.firebase.appcheck.ktx.FirebaseAppCheckKtxRegistrar
com.google.firebase.storage.FirebaseStorageKtxRegistrar
io.flutter.plugin.platform.SingleViewPresentation
androidx.fragment.app.DialogFragment
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
com.google.firebase.firestore.FirestoreRegistrar
kotlinx.coroutines.android.AndroidDispatcherFactory
io.flutter.embedding.engine.FlutterOverlaySurface
com.google.android.gms.common.annotation.KeepName
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.google.android.gms.auth.api.signin.GoogleSignInAccount
io.grpc.internal.PickFirstLoadBalancerProvider
com.google.android.gms.common.api.Scope
com.google.firebase.messaging.FirebaseMessagingService
com.google.android.gms.common.util.DynamiteApi
com.example.trical.MainActivity
io.flutter.view.AccessibilityViewEmbedder
kotlin.coroutines.jvm.internal.BaseContinuationImpl
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.google.android.gms.common.internal.ReflectedParcelable
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
io.flutter.view.TextureRegistry$GLTextureConsumer
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.google.android.gms.common.SupportErrorDialogFragment
com.google.firebase.iid.FirebaseInstanceId
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.google.firebase.provider.FirebaseInitProvider
androidx.core.app.CoreComponentFactory
com.google.firebase.datatransport.TransportRegistrar
io.flutter.embedding.engine.FlutterJNI
com.google.android.gms.common.api.internal.BasePendingResult
com.google.android.datatransport.cct.CctBackendFactory
com.google.android.gms.common.api.Status
io.flutter.view.TextureRegistry$SurfaceProducer
com.google.firebase.FirebaseCommonRegistrar
androidx.annotation.Keep
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback
com.google.firebase.storage.StorageRegistrar
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.firebase.components.ComponentRegistrar
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
com.google.firebase.concurrent.ExecutorsRegistrar
io.flutter.view.FlutterCallbackInformation
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
com.google.firebase.firestore.FirebaseFirestore
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
com.google.android.gms.common.api.internal.LifecycleCallback
androidx.window.extensions.core.util.function.Predicate
com.google.android.gms.common.api.internal.zzd
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
com.google.firebase.messaging.FirebaseMessagingRegistrar
androidx.versionedparcelable.ParcelImpl
androidx.window.extensions.core.util.function.Consumer
androidx.core.app.RemoteActionCompatParcelizer
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider
androidx.core.graphics.drawable.IconCompatParcelizer
com.google.firebase.installations.FirebaseInstallationsRegistrar
io.grpc.okhttp.OkHttpChannelProvider
androidx.profileinstaller.ProfileInstallerInitializer
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.firestore.v1.DocumentDelete: com.google.firestore.v1.DocumentDelete DEFAULT_INSTANCE
com.google.firestore.v1.AggregationResult: com.google.protobuf.Parser PARSER
com.google.firestore.admin.v1.Index$IndexField: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Value: int MAP_VALUE_FIELD_NUMBER
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.google.protobuf.Timestamp: int NANOS_FIELD_NUMBER
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
com.google.firestore.v1.BatchGetDocumentsRequest: int consistencySelectorCase_
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Parser PARSER
com.google.protobuf.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
com.google.firestore.v1.TargetChange: com.google.protobuf.Parser PARSER
com.google.firestore.v1.CommitRequest: int WRITES_FIELD_NUMBER
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList baseWrites_
com.google.firestore.v1.ListenRequest: com.google.protobuf.MapFieldLite labels_
com.google.firestore.admin.v1.Index: int state_
com.google.firestore.v1.ListenResponse: int DOCUMENT_DELETE_FIELD_NUMBER
com.google.firestore.v1.WriteRequest: int DATABASE_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsRequest: int TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.Cursor: int VALUES_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: int bitField0_
com.google.firestore.v1.StructuredQuery$Filter: int UNARY_FILTER_FIELD_NUMBER
com.google.firestore.v1.Document: int NAME_FIELD_NUMBER
com.google.firestore.v1.TargetChange: int targetChangeType_
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$CollectionSelector: boolean allDescendants_
com.google.firebase.firestore.proto.WriteBatch: int BATCH_ID_FIELD_NUMBER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: int FIELD_FIELD_NUMBER
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BitSequence: int PADDING_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: int DOCUMENT_FIELD_NUMBER
com.google.firestore.v1.DocumentChange: int TARGET_IDS_FIELD_NUMBER
com.google.firebase.firestore.proto.WriteBatch: int bitField0_
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.firestore.v1.BatchGetDocumentsResponse: java.lang.Object result_
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.firestore.v1.BatchGetDocumentsRequest: int NEW_TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.Document: com.google.firestore.v1.Document DEFAULT_INSTANCE
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.google.protobuf.Timestamp: com.google.protobuf.Timestamp DEFAULT_INSTANCE
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.google.firestore.v1.Cursor: com.google.protobuf.Internal$ProtobufList values_
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Int32Value limit_
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.firebase.firestore.proto.UnknownDocument: int NAME_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsResponse: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.StructuredAggregationQuery: int queryTypeCase_
com.google.firestore.v1.DocumentRemove: int removedTargetIdsMemoizedSerializedSize
com.google.firebase.firestore.proto.Target: int targetTypeCase_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.firestore.v1.WriteRequest: int WRITES_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsRequest: int MASK_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
com.google.firestore.v1.RunAggregationQueryResponse: com.google.protobuf.Timestamp readTime_
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.protobuf.Int32Value: int VALUE_FIELD_NUMBER
com.google.firebase.firestore.proto.NoDocument: java.lang.String name_
com.google.firestore.v1.Write: int bitField0_
com.google.firestore.v1.BloomFilter: com.google.firestore.v1.BloomFilter DEFAULT_INSTANCE
com.google.firestore.v1.ExistenceFilter: int COUNT_FIELD_NUMBER
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.firestore.v1.WriteRequest: int STREAM_ID_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.google.firestore.v1.Cursor: int BEFORE_FIELD_NUMBER
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
com.google.firestore.v1.WriteResponse: int bitField0_
com.google.firestore.v1.Write: int UPDATE_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery: int END_AT_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Filter: int COMPOSITE_FILTER_FIELD_NUMBER
com.google.firestore.admin.v1.Index$IndexField: com.google.firestore.admin.v1.Index$IndexField DEFAULT_INSTANCE
com.google.rpc.Status: com.google.protobuf.Internal$ProtobufList details_
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredQuery$FieldFilter: int bitField0_
com.google.firestore.v1.ListenResponse: int FILTER_FIELD_NUMBER
com.google.firestore.v1.Document: com.google.protobuf.Timestamp createTime_
com.google.firestore.v1.StructuredQuery$FieldFilter: int OP_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Internal$ProtobufList documents_
com.google.firestore.v1.Target$QueryTarget: java.lang.Object queryType_
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.ExistenceFilter: int TARGET_ID_FIELD_NUMBER
com.google.firestore.v1.Target: int bitField0_
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.Object consistencySelector_
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: java.lang.Object operator_
com.google.firestore.v1.AggregationResult: com.google.firestore.v1.AggregationResult DEFAULT_INSTANCE
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Filter where_
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.Target: java.lang.Object targetType_
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.firestore.v1.Value: com.google.firestore.v1.Value DEFAULT_INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.Document document_
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.UnknownFieldSetLite unknownFields
com.google.firestore.v1.Value: int INTEGER_VALUE_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$UnaryFilter: int OP_FIELD_NUMBER
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.google.firestore.bundle.BundledQuery: int limitType_
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.firestore.v1.DocumentRemove: int bitField0_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.google.firestore.v1.DocumentTransform$FieldTransform: int transformTypeCase_
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.ByteString transaction_
com.google.firestore.v1.ListenRequest: int REMOVE_TARGET_FIELD_NUMBER
com.google.firebase.storage.StorageRegistrar: com.google.firebase.components.Qualified uiExecutor
com.google.protobuf.Int64Value: int VALUE_FIELD_NUMBER
com.google.firebase.firestore.proto.MaybeDocument: java.lang.Object documentType_
com.google.firestore.v1.RunAggregationQueryResponse: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.MaybeDocument: com.google.protobuf.Parser PARSER
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter DEFAULT_INSTANCE
com.google.protobuf.Int32Value: com.google.protobuf.Parser PARSER
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.google.firestore.v1.Target: boolean once_
com.google.firestore.v1.Value: int BYTES_VALUE_FIELD_NUMBER
com.google.firestore.v1.WriteResult: int TRANSFORM_RESULTS_FIELD_NUMBER
com.google.firestore.v1.Value: int TIMESTAMP_VALUE_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Projection select_
com.google.firestore.v1.RunAggregationQueryRequest: int NEW_TRANSACTION_FIELD_NUMBER
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.DocumentMask mask_
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Parser PARSER
com.google.firestore.v1.WriteRequest: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TargetChange: com.google.protobuf.Timestamp readTime_
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.flutter.plugin.platform.SingleViewPresentation: int viewId
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
com.google.firestore.v1.DocumentChange: int DOCUMENT_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
com.google.firestore.admin.v1.Index: int NAME_FIELD_NUMBER
com.google.firestore.v1.StructuredAggregationQuery: int AGGREGATIONS_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Order: int bitField0_
com.google.firestore.v1.StructuredQuery: int SELECT_FIELD_NUMBER
com.google.firestore.v1.WriteResponse: java.lang.String streamId_
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.Value value_
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.google.firestore.v1.StructuredAggregationQuery: int STRUCTURED_QUERY_FIELD_NUMBER
com.google.firestore.v1.DocumentChange: int removedTargetIdsMemoizedSerializedSize
com.google.firestore.v1.BloomFilter: com.google.firestore.v1.BitSequence bits_
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.BloomFilter unchangedNames_
com.google.firestore.v1.BitSequence: com.google.protobuf.ByteString bitmap_
com.google.firestore.v1.WriteRequest: com.google.protobuf.MapFieldLite labels_
com.google.firebase.firestore.proto.NoDocument: int bitField0_
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.firestore.v1.TransactionOptions$ReadWrite DEFAULT_INSTANCE
com.google.protobuf.AbstractMessageLite: int memoizedHashCode
com.google.firestore.v1.DocumentChange: int targetIdsMemoizedSerializedSize
com.google.firestore.v1.WriteResponse: com.google.protobuf.Internal$ProtobufList writeResults_
com.google.firestore.v1.StructuredQuery: int ORDER_BY_FIELD_NUMBER
com.google.firestore.v1.ListenResponse: int DOCUMENT_REMOVE_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform$FieldTransform: int INCREMENT_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.firestore.v1.TransactionOptions$ReadOnly DEFAULT_INSTANCE
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.google.firestore.v1.Value: int ARRAY_VALUE_FIELD_NUMBER
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Parser PARSER
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.google.firebase.storage.StorageRegistrar: java.lang.String LIBRARY_NAME
com.google.firestore.admin.v1.Index: com.google.protobuf.Internal$ProtobufList fields_
com.google.firestore.v1.BitSequence: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.MaybeDocument: int documentTypeCase_
com.google.firestore.v1.ListenRequest: int ADD_TARGET_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.firestore.v1.TransactionOptions: java.lang.Object mode_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
com.google.firestore.v1.ListenResponse: int TARGET_CHANGE_FIELD_NUMBER
com.google.firestore.v1.Target: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Projection: com.google.firestore.v1.StructuredQuery$Projection DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$Order: int direction_
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.Parser PARSER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
com.google.firestore.v1.StructuredQuery$CollectionSelector: java.lang.String collectionId_
com.google.firestore.v1.RunAggregationQueryResponse: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.RunAggregationQueryResponse: com.google.protobuf.ByteString transaction_
com.google.firestore.v1.Write: int CURRENT_DOCUMENT_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.firestore.v1.StructuredQuery$FieldReference: int FIELD_PATH_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.BatchGetDocumentsRequest DEFAULT_INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
com.google.firestore.v1.RunAggregationQueryRequest: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$UnaryFilter: int op_
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Internal$ProtobufList fieldTransforms_
com.google.protobuf.Timestamp: int SECONDS_FIELD_NUMBER
com.google.firebase.storage.StorageRegistrar: com.google.firebase.components.Qualified blockingExecutor
com.google.firebase.firestore.proto.MaybeDocument: int HAS_COMMITTED_MUTATIONS_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions$ReadOnly: int consistencySelectorCase_
com.google.firestore.v1.RunAggregationQueryRequest: java.lang.Object queryType_
com.google.firestore.v1.StructuredQuery$Filter: int FIELD_FILTER_FIELD_NUMBER
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.protobuf.Any: com.google.protobuf.ByteString value_
com.google.firestore.v1.BatchGetDocumentsResponse: int resultCase_
com.google.firestore.v1.BatchGetDocumentsRequest: int DOCUMENTS_FIELD_NUMBER
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.flutter.embedding.engine.FlutterJNI: float displayWidth
com.google.firebase.firestore.proto.UnknownDocument: int bitField0_
com.google.firestore.v1.Target: java.lang.Object resumeType_
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Internal$ProtobufList filters_
com.google.firebase.firestore.proto.MaybeDocument: boolean hasCommittedMutations_
com.google.firestore.v1.DocumentMask: int FIELD_PATHS_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform: java.lang.String document_
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.firestore.v1.ExistenceFilter: int bitField0_
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.google.firestore.v1.Target$QueryTarget: int STRUCTURED_QUERY_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Timestamp readTime_
com.google.firestore.v1.Write: com.google.firestore.v1.DocumentMask updateMask_
com.google.firestore.v1.Precondition: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.MaybeDocument: int NO_DOCUMENT_FIELD_NUMBER
com.google.firebase.firestore.proto.NoDocument: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.BloomFilter: int BITS_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter DEFAULT_INSTANCE
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int AVG_FIELD_NUMBER
com.google.firestore.v1.Value: int REFERENCE_VALUE_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform DEFAULT_INSTANCE
com.google.firestore.v1.RunAggregationQueryResponse: int RESULT_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform$FieldTransform: int APPEND_MISSING_ELEMENTS_FIELD_NUMBER
com.google.firestore.v1.Precondition: int EXISTS_FIELD_NUMBER
com.google.firestore.v1.BitSequence: com.google.firestore.v1.BitSequence DEFAULT_INSTANCE
com.google.firestore.v1.WriteResponse: com.google.protobuf.ByteString streamToken_
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Timestamp readTime_
com.google.firestore.v1.BatchGetDocumentsResponse: int TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.TargetChange: int bitField0_
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp lastLimboFreeSnapshotVersion_
com.google.firebase.firestore.proto.WriteBatch: int batchId_
com.google.firestore.v1.StructuredAggregationQuery: com.google.protobuf.Internal$ProtobufList aggregations_
com.google.protobuf.Timestamp: int nanos_
com.google.firebase.firestore.proto.Target: int LAST_LISTEN_SEQUENCE_NUMBER_FIELD_NUMBER
com.google.firebase.firestore.proto.Target: int QUERY_FIELD_NUMBER
com.google.protobuf.Any: java.lang.String typeUrl_
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery DEFAULT_INSTANCE
com.google.firestore.v1.Write: int UPDATE_MASK_FIELD_NUMBER
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.BloomFilter: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Document: int UPDATE_TIME_FIELD_NUMBER
com.google.protobuf.Any: int VALUE_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Order: int FIELD_FIELD_NUMBER
com.google.firestore.v1.Value: int NULL_VALUE_FIELD_NUMBER
com.google.firestore.v1.ExistenceFilter: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.Target: long lastListenSequenceNumber_
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition DEFAULT_INSTANCE
com.google.firestore.v1.ExistenceFilter: int targetId_
com.google.firestore.v1.Value: int STRING_VALUE_FIELD_NUMBER
com.google.firebase.firestore.proto.NoDocument: int NAME_FIELD_NUMBER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.firestore.admin.v1.Index: java.lang.String name_
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.BatchGetDocumentsResponse DEFAULT_INSTANCE
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentDelete: int removedTargetIdsMemoizedSerializedSize
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.firestore.v1.RunAggregationQueryResponse: int bitField0_
com.google.firestore.v1.Value: int BOOLEAN_VALUE_FIELD_NUMBER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Timestamp version_
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: int bitField0_
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.firebase.firestore.proto.WriteBatch: int BASE_WRITES_FIELD_NUMBER
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.google.firestore.v1.Target$QueryTarget: int queryTypeCase_
com.google.firestore.v1.StructuredQuery$Filter: java.lang.Object filterType_
com.google.firestore.v1.WriteResponse: int COMMIT_TIME_FIELD_NUMBER
com.google.firebase.firestore.FirestoreRegistrar: java.lang.String LIBRARY_NAME
com.google.firestore.v1.ListenResponse: java.lang.Object responseType_
com.google.firestore.v1.Target$QueryTarget: com.google.protobuf.Parser PARSER
com.google.firestore.bundle.BundledQuery: com.google.firestore.bundle.BundledQuery DEFAULT_INSTANCE
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.firestore.v1.Value: int GEO_POINT_VALUE_FIELD_NUMBER
com.google.firestore.v1.MapValue: com.google.protobuf.MapFieldLite fields_
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Internal$IntList removedTargetIds_
com.google.firestore.v1.WriteResult: com.google.firestore.v1.WriteResult DEFAULT_INSTANCE
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int COUNT_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: float displayHeight
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.protobuf.Parser PARSER
com.google.firestore.admin.v1.Index$IndexField: int FIELD_PATH_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.String database_
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.firestore.bundle.BundledQuery: int queryTypeCase_
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.firestore.v1.WriteResponse: int WRITE_RESULTS_FIELD_NUMBER
com.google.firestore.v1.TargetChange: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.WriteResult: com.google.protobuf.Internal$ProtobufList transformResults_
com.google.firestore.v1.RunAggregationQueryRequest: int PARENT_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldFilter: int FIELD_FIELD_NUMBER
com.google.protobuf.Any: int TYPE_URL_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList from_
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.firestore.v1.TargetChange: int CAUSE_FIELD_NUMBER
com.google.firestore.v1.AggregationResult: com.google.protobuf.MapFieldLite aggregateFields_
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList writes_
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TransactionOptions: int READ_WRITE_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.Object transformType_
com.google.firestore.v1.Document: int CREATE_TIME_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
com.google.firestore.v1.CommitResponse: com.google.firestore.v1.CommitResponse DEFAULT_INSTANCE
com.google.firestore.admin.v1.Index: int STATE_FIELD_NUMBER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int ALIAS_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
com.google.firestore.admin.v1.Index: int queryScope_
com.google.firestore.v1.BatchGetDocumentsResponse: int MISSING_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$Filter: int filterTypeCase_
com.google.firestore.v1.StructuredQuery: int FROM_FIELD_NUMBER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum DEFAULT_INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
com.google.firestore.v1.StructuredQuery: int START_AT_FIELD_NUMBER
com.google.firestore.v1.Write: int DELETE_FIELD_NUMBER
com.google.firestore.v1.WriteResult: int bitField0_
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.String fieldPath_
com.google.firestore.v1.WriteResponse: int STREAM_TOKEN_FIELD_NUMBER
com.google.firestore.v1.Precondition: int conditionTypeCase_
com.google.firestore.v1.DocumentDelete: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.Target: int resumeTypeCase_
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
com.google.firestore.v1.StructuredQuery$Filter: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsRequest: int DATABASE_FIELD_NUMBER
com.google.firestore.v1.WriteRequest: com.google.protobuf.ByteString streamToken_
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.google.rpc.Status: int code_
com.google.firestore.v1.RunAggregationQueryResponse: com.google.firestore.v1.RunAggregationQueryResponse DEFAULT_INSTANCE
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.google.rpc.Status: java.lang.String message_
com.google.firestore.admin.v1.Index$IndexField: java.lang.String fieldPath_
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Parser PARSER
com.google.firestore.v1.CommitRequest: com.google.protobuf.Internal$ProtobufList writes_
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.protobuf.Parser PARSER
com.google.firestore.v1.CommitResponse: com.google.protobuf.Timestamp commitTime_
com.google.firestore.bundle.BundledQuery: com.google.protobuf.Parser PARSER
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target DEFAULT_INSTANCE
com.google.firestore.admin.v1.Index$IndexField: java.lang.Object valueMode_
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.ByteString retryTransaction_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.google.firebase.firestore.proto.Target: int SNAPSHOT_VERSION_FIELD_NUMBER
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.firestore.v1.DocumentTransform$FieldTransform: int MINIMUM_FIELD_NUMBER
com.google.firestore.v1.Target$DocumentsTarget: com.google.firestore.v1.Target$DocumentsTarget DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery: int bitField0_
com.google.firebase.firestore.proto.Target: com.google.protobuf.ByteString resumeToken_
io.flutter.embedding.engine.FlutterJNI: float displayDensity
com.google.firestore.v1.Cursor: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsResponse: int bitField0_
com.google.firestore.v1.BloomFilter: int bitField0_
com.google.firebase.firestore.proto.MaybeDocument: int UNKNOWN_DOCUMENT_FIELD_NUMBER
com.google.firestore.v1.RunAggregationQueryRequest: com.google.firestore.v1.RunAggregationQueryRequest DEFAULT_INSTANCE
com.google.firestore.v1.AggregationResult: int AGGREGATE_FIELDS_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.firestore.v1.DocumentChange: int bitField0_
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
com.google.firestore.v1.BloomFilter: int HASH_COUNT_FIELD_NUMBER
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.google.rpc.Status: int DETAILS_FIELD_NUMBER
com.google.firestore.v1.BitSequence: int padding_
com.google.firebase.firestore.proto.UnknownDocument: java.lang.String name_
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TargetChange: int RESUME_TOKEN_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.firestore.v1.StructuredQuery$CollectionSelector DEFAULT_INSTANCE
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
com.google.firestore.v1.DocumentRemove: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.google.type.LatLng: int LATITUDE_FIELD_NUMBER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredAggregationQuery: com.google.firestore.v1.StructuredAggregationQuery DEFAULT_INSTANCE
com.google.firestore.v1.RunAggregationQueryResponse: int TRANSACTION_FIELD_NUMBER
com.google.firestore.bundle.BundledQuery: int STRUCTURED_QUERY_FIELD_NUMBER
com.google.firestore.v1.Target: int ONCE_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Projection: int FIELDS_FIELD_NUMBER
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.google.firestore.v1.MapValue: int FIELDS_FIELD_NUMBER
com.google.firestore.v1.Write: java.lang.Object operation_
com.google.protobuf.Int32Value: com.google.protobuf.Int32Value DEFAULT_INSTANCE
com.google.protobuf.GeneratedMessageLite: int MUTABLE_FLAG_MASK
com.google.firestore.v1.DocumentChange: com.google.protobuf.Parser PARSER
com.google.firestore.v1.CommitRequest: int DATABASE_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery: int offset_
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.google.firestore.v1.StructuredQuery$CompositeFilter: int op_
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: int FIELD_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Parser PARSER
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.protobuf.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
com.google.firestore.v1.Target: com.google.protobuf.Parser PARSER
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Timestamp readTime_
com.google.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.google.firestore.v1.StructuredQuery$CompositeFilter: int OP_FIELD_NUMBER
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter DEFAULT_INSTANCE
com.google.protobuf.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
com.google.firestore.v1.DocumentTransform: int FIELD_TRANSFORMS_FIELD_NUMBER
com.google.firestore.v1.RunAggregationQueryRequest: int STRUCTURED_AGGREGATION_QUERY_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
com.google.firestore.v1.StructuredAggregationQuery: java.lang.Object queryType_
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: com.google.protobuf.Int64Value upTo_
com.google.firestore.v1.CommitRequest: com.google.protobuf.ByteString transaction_
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.google.firestore.v1.CommitRequest: java.lang.String database_
com.google.firestore.v1.Document: int FIELDS_FIELD_NUMBER
com.google.firestore.v1.Write: int operationCase_
com.google.firestore.v1.TransactionOptions: int READ_ONLY_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.google.firestore.v1.ArrayValue: int VALUES_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions$ReadOnly: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.Precondition: int UPDATE_TIME_FIELD_NUMBER
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor endAt_
com.google.firestore.v1.DocumentMask: com.google.firestore.v1.DocumentMask DEFAULT_INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Target$QueryTarget: java.lang.String parent_
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.firestore.v1.Cursor: com.google.firestore.v1.Cursor DEFAULT_INSTANCE
com.google.firestore.v1.WriteRequest: int LABELS_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.google.firestore.v1.BloomFilter: int hashCount_
com.google.firestore.admin.v1.Index: com.google.firestore.admin.v1.Index DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter DEFAULT_INSTANCE
com.google.rpc.Status: int CODE_FIELD_NUMBER
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: com.google.protobuf.Parser PARSER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.firestore.v1.MapValue: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.Target: int RESUME_TOKEN_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$UnaryFilter: int FIELD_FIELD_NUMBER
com.google.firestore.admin.v1.Index: int FIELDS_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.firestore.v1.DocumentRemove: int DOCUMENT_FIELD_NUMBER
com.google.firebase.firestore.proto.Target: int bitField0_
com.google.firebase.firestore.proto.MaybeDocument: int DOCUMENT_FIELD_NUMBER
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Timestamp readTime_
com.google.firestore.v1.TransactionOptions: int modeCase_
com.google.firestore.v1.StructuredQuery$UnaryFilter: java.lang.Object operandType_
com.google.protobuf.Int64Value: com.google.protobuf.Int64Value DEFAULT_INSTANCE
com.google.firestore.v1.RunAggregationQueryRequest: java.lang.String parent_
com.google.firestore.v1.WriteResponse: com.google.protobuf.Parser PARSER
com.google.firestore.v1.WriteRequest: int STREAM_TOKEN_FIELD_NUMBER
com.google.firestore.v1.WriteResult: int UPDATE_TIME_FIELD_NUMBER
com.google.firestore.v1.WriteResponse: com.google.protobuf.Timestamp commitTime_
com.google.rpc.Status: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredQuery$Order: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: int bitField0_
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Parser PARSER
com.google.firestore.v1.ArrayValue: com.google.protobuf.Parser PARSER
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
com.google.type.LatLng: double longitude_
com.google.firestore.v1.StructuredQuery$FieldFilter: int op_
com.google.firestore.v1.WriteResponse: int STREAM_ID_FIELD_NUMBER
com.google.rpc.Status: com.google.rpc.Status DEFAULT_INSTANCE
com.google.type.LatLng: com.google.type.LatLng DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$CollectionSelector: int ALL_DESCENDANTS_FIELD_NUMBER
com.google.firestore.bundle.BundledQuery: int PARENT_FIELD_NUMBER
com.google.firebase.firestore.proto.UnknownDocument: int VERSION_FIELD_NUMBER
com.google.firebase.firestore.proto.WriteBatch: int WRITES_FIELD_NUMBER
com.google.firestore.v1.RunAggregationQueryRequest: int consistencySelectorCase_
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList removedTargetIds_
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.firestore.v1.DocumentChange: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.google.firebase.firestore.proto.Target: com.google.protobuf.Parser PARSER
com.google.protobuf.Any: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredQuery: int LIMIT_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$CollectionSelector: int COLLECTION_ID_FIELD_NUMBER
com.google.firestore.v1.Target$DocumentsTarget: int DOCUMENTS_FIELD_NUMBER
com.google.protobuf.Timestamp: long seconds_
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: int bitField0_
com.google.firestore.v1.CommitResponse: com.google.protobuf.Internal$ProtobufList writeResults_
com.google.firebase.firestore.proto.UnknownDocument: com.google.firebase.firestore.proto.UnknownDocument DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList orderBy_
com.google.firestore.v1.Precondition: java.lang.Object conditionType_
com.google.firestore.v1.Write: com.google.firestore.v1.Write DEFAULT_INSTANCE
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.ArrayValue DEFAULT_INSTANCE
com.google.firebase.firestore.proto.Target: int DOCUMENTS_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.firebase.firestore.proto.Target: int LAST_LIMBO_FREE_SNAPSHOT_VERSION_FIELD_NUMBER
com.google.firestore.v1.WriteResult: com.google.protobuf.Timestamp updateTime_
com.google.firestore.v1.WriteRequest: java.lang.String database_
com.google.firestore.v1.RunAggregationQueryResponse: com.google.firestore.v1.AggregationResult result_
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.firestore.v1.StructuredQuery$UnaryFilter: int operandTypeCase_
com.google.firestore.v1.ListenResponse: int DOCUMENT_CHANGE_FIELD_NUMBER
com.google.firestore.v1.BitSequence: int BITMAP_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.firestore.v1.StructuredQuery$FieldReference DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery: int WHERE_FIELD_NUMBER
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: com.google.firestore.v1.StructuredAggregationQuery$Aggregation DEFAULT_INSTANCE
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.firestore.v1.WriteRequest: com.google.protobuf.Internal$ProtobufList writes_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int operatorCase_
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Internal$ProtobufList documents_
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList targetIds_
com.google.firestore.v1.Target: com.google.firestore.v1.Target DEFAULT_INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
com.google.firestore.v1.Target: int targetTypeCase_
com.google.firestore.v1.StructuredQuery$CompositeFilter: int FILTERS_FIELD_NUMBER
com.google.firestore.admin.v1.Index: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.Target: int targetId_
com.google.firestore.v1.DocumentTransform: int DOCUMENT_FIELD_NUMBER
com.google.firestore.v1.RunAggregationQueryRequest: com.google.protobuf.Parser PARSER
com.google.firestore.v1.WriteRequest: com.google.firestore.v1.WriteRequest DEFAULT_INSTANCE
com.google.firestore.v1.Target$QueryTarget: int PARENT_FIELD_NUMBER
io.grpc.internal.SerializingExecutor: int runState
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
com.google.firestore.v1.ListenRequest: int targetChangeCase_
com.google.firestore.v1.CommitResponse: com.google.protobuf.Parser PARSER
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.google.firestore.v1.RunAggregationQueryRequest: int TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.CommitResponse: int bitField0_
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.firestore.v1.DocumentTransform$FieldTransform: int MAXIMUM_FIELD_NUMBER
com.google.firestore.v1.TargetChange: int targetIdsMemoizedSerializedSize
com.google.firestore.v1.StructuredQuery$Order: int DIRECTION_FIELD_NUMBER
com.google.firestore.v1.RunAggregationQueryRequest: java.lang.Object consistencySelector_
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.firestore.v1.ListenRequest: java.lang.Object targetChange_
com.google.firestore.v1.DocumentRemove: com.google.firestore.v1.DocumentRemove DEFAULT_INSTANCE
com.google.firestore.v1.ListenResponse: int responseTypeCase_
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: java.lang.String alias_
com.google.firestore.v1.BatchGetDocumentsRequest: int READ_TIME_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
com.google.firestore.v1.Target: java.lang.Object targetType_
com.google.firestore.v1.Write: com.google.protobuf.Internal$ProtobufList updateTransforms_
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.google.firestore.v1.CommitRequest: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TargetChange: com.google.rpc.Status cause_
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.firestore.v1.Value: int valueTypeCase_
com.google.firestore.v1.DocumentTransform$FieldTransform: int FIELD_PATH_FIELD_NUMBER
com.google.firestore.v1.RunAggregationQueryRequest: int queryTypeCase_
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ListenResponse DEFAULT_INSTANCE
com.google.protobuf.Int64Value: long value_
com.google.firestore.v1.ListenRequest: int DATABASE_FIELD_NUMBER
com.google.firestore.v1.Document: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Target: com.google.protobuf.Int32Value expectedCount_
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
com.google.firestore.v1.Target: int RESUME_TOKEN_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: java.lang.String document_
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.google.firestore.v1.StructuredQuery: int OFFSET_FIELD_NUMBER
com.google.firestore.v1.DocumentRemove: java.lang.String document_
com.google.protobuf.Int32Value: int value_
com.google.firestore.v1.Document: int bitField0_
com.google.firestore.bundle.BundledQuery: int LIMIT_TYPE_FIELD_NUMBER
com.google.firestore.v1.TargetChange: com.google.protobuf.ByteString resumeToken_
com.google.firestore.v1.ExistenceFilter: int count_
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Parser PARSER
com.google.firestore.v1.ListenRequest: com.google.protobuf.Parser PARSER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.firestore.v1.TransactionOptions$ReadOnly: java.lang.Object consistencySelector_
com.google.firestore.v1.WriteResponse: com.google.firestore.v1.WriteResponse DEFAULT_INSTANCE
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.firestore.v1.Write: int TRANSFORM_FIELD_NUMBER
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch DEFAULT_INSTANCE
com.google.firestore.v1.TransactionOptions: com.google.protobuf.Parser PARSER
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Write: com.google.firestore.v1.Precondition currentDocument_
com.google.firestore.v1.DocumentTransform$FieldTransform: int SET_TO_SERVER_VALUE_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.DocumentChange DEFAULT_INSTANCE
com.google.firestore.v1.DocumentMask: com.google.protobuf.Parser PARSER
com.google.protobuf.Int64Value: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Parser PARSER
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
kotlinx.coroutines.channels.BufferedChannel: long receivers
com.google.firebase.firestore.proto.WriteBatch: int LOCAL_WRITE_TIME_FIELD_NUMBER
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.firestore.v1.WriteRequest: java.lang.String streamId_
com.google.firestore.v1.Document: com.google.protobuf.MapFieldLite fields_
com.google.firestore.admin.v1.Index$IndexField: int ARRAY_CONFIG_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$FieldReference: java.lang.String fieldPath_
com.google.firebase.firestore.proto.Target: int TARGET_ID_FIELD_NUMBER
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
com.google.firestore.v1.Cursor: boolean before_
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: int UP_TO_FIELD_NUMBER
com.google.firestore.v1.ListenRequest: int LABELS_FIELD_NUMBER
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.Write: com.google.protobuf.Parser PARSER
com.google.protobuf.Timestamp: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TargetChange: com.google.firestore.v1.TargetChange DEFAULT_INSTANCE
com.google.firestore.v1.DocumentTransform: com.google.firestore.v1.DocumentTransform DEFAULT_INSTANCE
com.google.firestore.bundle.BundledQuery: java.lang.String parent_
com.google.rpc.Status: int MESSAGE_FIELD_NUMBER
kotlinx.coroutines.JobSupport: java.lang.Object _state
kotlinx.coroutines.CancelledContinuation: int _resumed
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$Order DEFAULT_INSTANCE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
com.google.firestore.v1.MapValue: com.google.firestore.v1.MapValue DEFAULT_INSTANCE
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.google.firestore.v1.DocumentTransform$FieldTransform: int REMOVE_ALL_FROM_ARRAY_FIELD_NUMBER
com.google.firestore.v1.CommitResponse: int WRITE_RESULTS_FIELD_NUMBER
com.google.firestore.v1.WriteResult: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsRequest: int bitField0_
com.google.firestore.v1.Target: int targetId_
com.google.firestore.v1.TargetChange: com.google.protobuf.Internal$IntList targetIds_
com.google.firestore.v1.Value: int DOUBLE_VALUE_FIELD_NUMBER
com.google.firestore.admin.v1.Index: int QUERY_SCOPE_FIELD_NUMBER
com.google.firestore.v1.Document: java.lang.String name_
com.google.firestore.v1.StructuredQuery$FieldFilter: int VALUE_FIELD_NUMBER
com.google.firebase.Timestamp: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.NoDocument: com.google.firebase.firestore.proto.NoDocument DEFAULT_INSTANCE
com.google.firestore.v1.CommitRequest: int TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.TransactionOptions$ReadWrite: int RETRY_TRANSACTION_FIELD_NUMBER
com.google.firestore.v1.Target: int DOCUMENTS_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.google.firestore.v1.Value: java.lang.Object valueType_
com.google.firestore.v1.DocumentRemove: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: com.google.protobuf.Parser PARSER
com.google.firestore.v1.CommitResponse: int COMMIT_TIME_FIELD_NUMBER
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.google.firestore.admin.v1.Index$IndexField: int valueModeCase_
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.firestore.v1.ListenRequest: com.google.firestore.v1.ListenRequest DEFAULT_INSTANCE
com.google.firestore.v1.ArrayValue: com.google.protobuf.Internal$ProtobufList values_
com.google.firestore.v1.Target: int QUERY_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Internal$ProtobufList fields_
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Parser PARSER
com.google.firestore.v1.Write: int VERIFY_FIELD_NUMBER
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Timestamp localWriteTime_
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.ExistenceFilter DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor startAt_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.google.protobuf.GeneratedMessageLite: int memoizedSerializedSize
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
com.google.firestore.v1.Target: int TARGET_ID_FIELD_NUMBER
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.Target$QueryTarget DEFAULT_INSTANCE
com.google.firestore.v1.TransactionOptions: com.google.firestore.v1.TransactionOptions DEFAULT_INSTANCE
com.google.firestore.v1.CommitRequest: com.google.firestore.v1.CommitRequest DEFAULT_INSTANCE
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
com.google.type.LatLng: int LONGITUDE_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.google.firestore.v1.Value: com.google.protobuf.Parser PARSER
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int SUM_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Internal$IntList removedTargetIds_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
com.google.type.LatLng: double latitude_
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count DEFAULT_INSTANCE
com.google.firestore.v1.ListenRequest: java.lang.String database_
com.google.firestore.v1.StructuredAggregationQuery: com.google.protobuf.Parser PARSER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: com.google.protobuf.Parser PARSER
com.google.firestore.v1.TargetChange: int TARGET_CHANGE_TYPE_FIELD_NUMBER
com.google.firestore.admin.v1.Index$IndexField: int ORDER_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsResponse: int FOUND_FIELD_NUMBER
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.firestore.v1.ExistenceFilter: int UNCHANGED_NAMES_FIELD_NUMBER
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
com.google.type.LatLng: com.google.protobuf.Parser PARSER
com.google.firestore.v1.DocumentMask: com.google.protobuf.Internal$ProtobufList fieldPaths_
com.google.firestore.v1.Target: int EXPECTED_COUNT_FIELD_NUMBER
com.google.firestore.v1.Write: int UPDATE_TRANSFORMS_FIELD_NUMBER
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp snapshotVersion_
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.protobuf.Parser PARSER
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.google.firestore.bundle.BundledQuery: java.lang.Object queryType_
com.google.firestore.v1.Document: com.google.protobuf.Timestamp updateTime_
com.google.firestore.v1.TargetChange: int TARGET_IDS_FIELD_NUMBER
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.google.protobuf.Any: com.google.protobuf.Any DEFAULT_INSTANCE
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.ListenResponse: com.google.protobuf.Parser PARSER
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase[] values()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source valueOf(java.lang.String)
com.google.firebase.firestore.AggregateSource: com.google.firebase.firestore.AggregateSource valueOf(java.lang.String)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase[] values()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
io.flutter.view.TextureRegistry$SurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType[] values()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
com.google.firebase.firestore.ktx.FirebaseFirestoreKtxRegistrar: java.util.List getComponents()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
io.grpc.okhttp.OkHttpChannelProvider: int priority()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator[] values()
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State[] values()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: java.lang.String getPolicyName()
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
io.grpc.internal.PickFirstLoadBalancerProvider: PickFirstLoadBalancerProvider()
com.google.firebase.appcheck.FirebaseAppCheckRegistrar: FirebaseAppCheckRegistrar()
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type[] values()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase valueOf(java.lang.String)
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction valueOf(java.lang.String)
com.google.firebase.iid.Registrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState[] values()
com.google.firebase.storage.StorageRegistrar: com.google.firebase.storage.FirebaseStorageComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.firestore.admin.v1.Index$IndexField$ArrayConfig: com.google.firestore.admin.v1.Index$IndexField$ArrayConfig valueOf(java.lang.String)
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType valueOf(java.lang.String)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite valueOf(java.lang.String)
io.grpc.internal.DnsNameResolverProvider: int priority()
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
com.example.trical.MainActivity: MainActivity()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.firestore.FirestoreRegistrar: FirestoreRegistrar()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] values()
com.google.firebase.appcheck.ktx.FirebaseAppCheckKtxRegistrar: FirebaseAppCheckKtxRegistrar()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
com.google.firebase.firestore.core.EventManager$ListenerRemovalAction: com.google.firebase.firestore.core.EventManager$ListenerRemovalAction valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
io.grpc.okhttp.OkHttpChannelProvider: boolean isAvailable()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: void setPresentationView(android.view.View)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ServerTimestampBehavior: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ServerTimestampBehavior[] values()
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor valueOf(java.lang.String)
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver[] values()
androidx.window.layout.adapter.sidecar.SidecarCompat: void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType[] values()
io.grpc.SecurityLevel: io.grpc.SecurityLevel valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionType[] values()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type valueOf(java.lang.String)
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] values()
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType[] values()
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator valueOf(java.lang.String)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
androidx.tracing.TraceApi29Impl: boolean isEnabled()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.google.firebase.firestore.remote.WatchChangeAggregator$BloomFilterApplicationStatus: com.google.firebase.firestore.remote.WatchChangeAggregator$BloomFilterApplicationStatus valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentChangeType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentChangeType[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$700(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
com.google.firebase.iid.Registrar: Registrar()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator[] values()
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator[] values()
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type[] values()
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator[] values()
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source[] values()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType valueOf(java.lang.String)
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase[] values()
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.google.firebase.firestore.core.EventManager$ListenerSetupAction: com.google.firebase.firestore.core.EventManager$ListenerSetupAction valueOf(java.lang.String)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setBigPicture(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.firebase.storage.ktx.FirebaseStorageKtxRegistrar: java.util.List getComponents()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType valueOf(java.lang.String)
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$1(com.google.firebase.components.ComponentContainer)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId valueOf(java.lang.String)
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase[] values()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.grpc.util.OutlierDetectionLoadBalancerProvider: boolean isAvailable()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams[] values()
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
com.google.firestore.admin.v1.Index$QueryScope: com.google.firestore.admin.v1.Index$QueryScope valueOf(java.lang.String)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.grpc.util.OutlierDetectionLoadBalancerProvider: OutlierDetectionLoadBalancerProvider()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] values()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setLegacyStreamType(android.media.AudioAttributes$Builder,int)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$2(com.google.firebase.components.ComponentContainer)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void endRearDisplaySession()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType valueOf(java.lang.String)
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState valueOf(java.lang.String)
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.google.firebase.firestore.ListenSource: com.google.firebase.firestore.ListenSource[] values()
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level[] values()
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior[] values()
com.google.protobuf.JavaType: com.google.protobuf.JavaType valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature[] values()
com.google.firebase.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.google.firebase.firestore.FirestoreRegistrar: com.google.firebase.firestore.FirestoreMultiDbComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State valueOf(java.lang.String)
io.grpc.internal.PickFirstLoadBalancerProvider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: android.util.DisplayMetrics getWindowAreaDisplayMetrics()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: long totalDuration(android.animation.AnimatorSet)
io.grpc.internal.PickFirstLoadBalancerProvider: java.lang.String getPolicyName()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] values()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order[] values()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState[] values()
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType valueOf(java.lang.String)
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase valueOf(java.lang.String)
com.google.protobuf.FieldType: com.google.protobuf.FieldType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: java.util.List getComponents()
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] values()
com.google.firebase.firestore.FirestoreRegistrar: java.util.List getComponents()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] values()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] values()
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.window.extensions.core.util.function.Function: java.lang.Object apply(java.lang.Object)
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase[] values()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
com.google.firebase.firestore.core.EventManager$ListenerRemovalAction: com.google.firebase.firestore.core.EventManager$ListenerRemovalAction[] values()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
io.flutter.view.TextureRegistry$SurfaceProducer: void release()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type valueOf(java.lang.String)
androidx.core.os.ConfigurationCompat$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateType valueOf(java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.firestore.FirebaseFirestoreKtxRegistrar: java.util.List getComponents()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ListenSource: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ListenSource[] values()
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.google.protobuf.NullValue: com.google.protobuf.NullValue[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
io.grpc.Status$Code: io.grpc.Status$Code valueOf(java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.grpc.Status$Code: io.grpc.Status$Code[] values()
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] values()
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: android.util.DisplayMetrics getRearDisplayMetrics()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges valueOf(java.lang.String)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction[] values()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.firebase.storage.StorageRegistrar: StorageRegistrar()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.google.firebase.storage.FirebaseStorageKtxRegistrar: FirebaseStorageKtxRegistrar()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: FlutterFirebaseFirestoreRegistrar()
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: androidx.window.extensions.area.ExtensionWindowAreaPresentation getRearDisplayPresentation()
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus[] values()
io.grpc.okhttp.OkHttpChannelProvider: OkHttpChannelProvider()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.google.android.gms.common.api.internal.zzd: zzd()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void reverse(android.animation.AnimatorSet)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase[] values()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level valueOf(java.lang.String)
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void setCurrentPlayTime(android.animation.AnimatorSet,long)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase valueOf(java.lang.String)
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.Qualified,com.google.firebase.components.ComponentContainer)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.window.extensions.core.util.function.Consumer: void accept(java.lang.Object)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateType[] values()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State valueOf(java.lang.String)
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionResult: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionResult[] values()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
com.google.firebase.firestore.core.ActivityScope$StopListenerSupportFragment: ActivityScope$StopListenerSupportFragment()
com.google.firebase.firestore.FirebaseFirestore: void setClientLanguage(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: int getWindowAreaStatus()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void startRearDisplayPresentationSession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.google.firebase.firestore.core.EventManager$ListenerSetupAction: com.google.firebase.firestore.core.EventManager$ListenerSetupAction[] values()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageTaskState: io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageTaskState valueOf(java.lang.String)
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type[] values()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateSource: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateSource[] values()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: FirebaseCommonLegacyRegistrar()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
io.grpc.okhttp.OkHttpServerProvider: OkHttpServerProvider()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase[] values()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$Source: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$Source valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.google.firebase.firestore.remote.WatchChangeAggregator$BloomFilterApplicationStatus: com.google.firebase.firestore.remote.WatchChangeAggregator$BloomFilterApplicationStatus[] values()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.firebase.firestore.FirebaseFirestoreKtxRegistrar: FirebaseFirestoreKtxRegistrar()
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
io.grpc.internal.DnsNameResolverProvider: java.util.Collection getProducedSocketAddressTypes()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator[] values()
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] values()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.grpc.internal.PickFirstLoadBalancerProvider: int getPriority()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType[] values()
io.grpc.ConnectivityState: io.grpc.ConnectivityState[] values()
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] values()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
com.google.firebase.appcheck.internal.StorageHelper$TokenType: com.google.firebase.appcheck.internal.StorageHelper$TokenType valueOf(java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType valueOf(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] values()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
kotlin.random.Random: Random()
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel[] values()
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
io.grpc.internal.PickFirstLoadBalancerProvider: boolean isAvailable()
com.google.firestore.admin.v1.Index$IndexField$ArrayConfig: com.google.firestore.admin.v1.Index$IndexField$ArrayConfig[] values()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateSource: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateSource valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: int getPriority()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.storage.FirebaseStorageKtxRegistrar: java.util.List getComponents()
com.google.firebase.storage.ktx.FirebaseStorageKtxRegistrar: FirebaseStorageKtxRegistrar()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.google.firebase.appcheck.FirebaseAppCheckKtxRegistrar: FirebaseAppCheckKtxRegistrar()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionResult: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionResult valueOf(java.lang.String)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$Source: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$Source[] values()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ListenSource: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ListenSource valueOf(java.lang.String)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection valueOf(java.lang.String)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.google.firestore.admin.v1.Index$QueryScope: com.google.firestore.admin.v1.Index$QueryScope[] values()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase[] values()
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction valueOf(java.lang.String)
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.window.extensions.core.util.function.Predicate: boolean test(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: SecretRoundRobinLoadBalancerProvider$Provider()
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase valueOf(java.lang.String)
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges[] values()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver valueOf(java.lang.String)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
io.grpc.internal.DnsNameResolverProvider: boolean isAvailable()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.google.firebase.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void removeRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.google.protobuf.NullValue: com.google.protobuf.NullValue valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState[] values()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
io.grpc.internal.DnsNameResolverProvider: DnsNameResolverProvider()
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity valueOf(java.lang.String)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType[] values()
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
com.google.firebase.firestore.AggregateSource: com.google.firebase.firestore.AggregateSource[] values()
com.google.firebase.appcheck.internal.StorageHelper$TokenType: com.google.firebase.appcheck.internal.StorageHelper$TokenType[] values()
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase valueOf(java.lang.String)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$800(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType: io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType valueOf(java.lang.String)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax valueOf(java.lang.String)
com.google.common.collect.Ordering: Ordering()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.grpc.SecurityLevel: io.grpc.SecurityLevel[] values()
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setContentDescription(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind[] values()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageTaskState: io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageTaskState[] values()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
com.google.firebase.firestore.ktx.FirebaseFirestoreKtxRegistrar: FirebaseFirestoreKtxRegistrar()
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType[] values()
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol[] values()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void removeRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
io.grpc.util.OutlierDetectionLoadBalancerProvider: java.lang.String getPolicyName()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
com.google.firebase.storage.StorageRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentChangeType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentChangeType valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void startRearDisplaySession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams valueOf(java.lang.String)
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.grpc.util.OutlierDetectionLoadBalancerProvider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: boolean isAvailable()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ServerTimestampBehavior: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ServerTimestampBehavior valueOf(java.lang.String)
androidx.startup.InitializationProvider: InitializationProvider()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
io.grpc.okhttp.OkHttpChannelProvider: io.grpc.ManagedChannelBuilder builderForTarget(java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void addRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.view.TextureRegistry$SurfaceProducer: long id()
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase[] values()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.firebase.firestore.ListenSource: com.google.firebase.firestore.ListenSource valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void endRearDisplayPresentationSession()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State[] values()
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode[] values()
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType: io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType[] values()
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source[] values()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
androidx.window.layout.util.ContextCompatHelperApi30: androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context)
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
io.grpc.util.OutlierDetectionLoadBalancerProvider: int getPriority()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] values()
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionType valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction[] values()
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose valueOf(java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void addRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId[] values()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction[] values()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: java.util.List getComponents()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
io.grpc.ConnectivityState: io.grpc.ConnectivityState valueOf(java.lang.String)
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: android.content.Context getPresentationContext()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code[] values()
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] values()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
